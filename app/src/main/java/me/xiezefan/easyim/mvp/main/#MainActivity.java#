package me.xiezefan.easyim.mvp.main;

import android.app.FragmentManager;
import android.app.FragmentTransaction;
import android.os.Bundle;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.View;
import android.widget.RelativeLayout;

import com.orhanobut.logger.Logger;

import javax.inject.Inject;

import butterknife.InjectView;
import de.greenrobot.event.EventBus;
import me.xiezefan.easyim.Application;
import me.xiezefan.easyim.R;
import me.xiezefan.easyim.event.model.BackPressedEvent;
import me.xiezefan.easyim.mvp.activity.BaseActivity;
import me.xiezefan.easyim.mvp.adapter.LeftMenuAdapter;
import me.xiezefan.easyim.mvp.chat_session.ChatSessionFragment;
import me.xiezefan.easyim.mvp.contact.ContactFragment;
import me.xiezefan.easyim.mvp.new_friend.NewFriendFragment;
import me.xiezefan.easyim.mvp.user_info.UserInfoFragment;


public class MainActivity extends BaseActivity implements MainView, LeftMenuAdapter.OnLeftMenuItemClickListener {


    @InjectView(R.id.rvLeftMenu)
    RecyclerView rvLeftMenu;
    @InjectView(R.id.drawer_layout)
    DrawerLayout drawerLayout;
    @InjectView(R.id.rlLeftMenuWrapper)
    RelativeLayout rlLeftMenuWrapper;
    @Inject
    MainPresenter mainPresenter;

    private UserInfoFragment userInfoFragment;
    private ChatSessionFragment chatSessionFragment;
    private ContactFragment contactFragment;
    private NewFriendFragment newFriendFragment;
    private LeftMenuAdapter leftMenuAdapter;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        initData();
        initLeftMenu();
        initFragment();
    }

    private void initData() {
        ((Application)getApplication()).getApplicationGraph().inject(this);
        mainPresenter.setMainView(this);
        mainPresenter.syncData();
    }

    @Override
    protected void onStart() {
        super.onStart();
        EventBus.getDefault().register(this);
    }

    @Override
    protected void onStop() {
        super.onStop();
        EventBus.getDefault().unregister(this);
    }

    private void initFragment() {

        FragmentManager fm = getFragmentManager();
        // ‘¿ª‘ÆôFragment‘ÊÂ‘Îñ
        FragmentTransaction transaction = fm.beginTransaction();
        if (chatSessionFragment == null) {
            chatSessionFragment = new ChatSessionFragment();
        }
        transaction.replace(R.id.flFragmentBox, chatSessionFragment);
        transaction.commit();
    }

    @Override
    public void afterInitToolbar() {
        toolbar.setNavigationIcon(R.drawable.ic_action_storage);
        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                drawerLayout.openDrawer(rlLeftMenuWrapper);
            }
        });
    }

    private void initLeftMenu() {
        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(this);
        rvLeftMenu.setLayoutManager(linearLayoutManager);
        leftMenuAdapter = new LeftMenuAdapter(this);
        leftMenuAdapter.setOnLeftMenuItemClickListener(this);
        rvLeftMenu.setAdapter(leftMenuAdapter);
    }







    @Override
    public void onMeInfoItemClick(View view) {
        FragmentTransaction translation = getFragmentManager().beginTransaction();
        if (userInfoFragment == null) {
            userInfoFragment = new UserInfoFragment();
        }
        translation.replace(R.id.flFragmentBox, userInfoFragment);
        translation.commit();
        drawerLayout.closeDrawer(rlLeftMenuWrapper);
    }

    @Override
    public void onChatSessionItemClick(View view) {
        FragmentTransaction translation = getFragmentManager().beginTransaction();
        if (chatSessionFragment == null) {
            chatSessionFragment = new ChatSessionFragment();
        }
        translation.replace(R.id.flFragmentBox, chatSessionFragment);
        translation.commit();
        drawerLayout.closeDrawer(rlLeftMenuWrapper);
    }

    @Override
    public void onContactItemClick(View view) {
        FragmentTransaction translation = getFragmentManager().beginTransaction();
        if (contactFragment == null) {
            contactFragment = new ContactFragment();
        }
        translation.replace(R.id.flFragmentBox, contactFragment);
        translation.commit();
        drawerLayout.closeDrawer(rlLeftMenuWrapper);
    }

    @Override
    public void onNewFriendItemClick(View view) {
        FragmentTransaction translation = getFragmentManager().beginTransaction();
        if (newFriendFragment == null) {
            newFriendFragment = new NewFriendFragment();
        }
        translation.replace(R.id.flFragmentBox, newFriendFragment);
        translation.commit();
        drawerLayout.closeDrawer(rlLeftMenuWrapper);
    }

    @Override
    public void onSettingItemClick(View view) {
        FragmentTransaction translation = getFragmentManager().beginTransaction();
        if (contactFragment == null) {
            contactFragment = new ContactFragment();
        }
        translation.replace(R.id.flFragmentBox, contactFragment);
        translation.commit();
        drawerLayout.closeDrawer(rlLeftMenuWrapper);
    }


    @Override
    public void onBackPressed() {
        EventBus.getDefault().post(new BackPressedEvent(this));
    }

    /*---- Events ----*/

    /**
     * ‘ºó‘ÍË‘°´‘Å¥‘ÊÂ‘¼þ
     * @param event ‘ºó‘ÍË‘ÊÂ‘¼þ
     */
    public void onEventMainThread(BackPressedEvent event) {
        if (event.inSameActivity(this)) {
            super.onBackPressed();
        }
    }


}
